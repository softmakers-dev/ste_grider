{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ColorScreen = function ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: \"Add a Color\",\n      onPress: function onPress() {\n        setColors([].concat(_toConsumableArray(colors), [randomRgb()]));\n      }\n    }), _jsx(FlatList, {\n      keyExtractor: function keyExtractor(item) {\n        return item;\n      },\n      data: colors,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(View, {\n          style: {\n            height: 100,\n            width: 100,\n            backgroundColor: item\n          }\n        });\n      }\n    })]\n  });\n};\n\nvar randomRgb = function randomRgb() {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";\n};\n\nvar styles = StyleSheet.create({});\nexport default ColorScreen;","map":{"version":3,"names":["React","useState","ColorScreen","colors","setColors","randomRgb","item","height","width","backgroundColor","red","Math","floor","random","green","blue","styles","StyleSheet","create"],"sources":["/Users/michaelkim/workspace_reactnative/ste_grider/rn-starter/src/screens/ColorScreen.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport {View, Text, StyleSheet, Button, FlatList} from \"react-native\";\n\nconst ColorScreen = () => {\n    const [colors, setColors] = useState([])\n\n    return(\n        <View>\n            <Button title=\"Add a Color\" onPress={() => {\n                setColors([...colors, randomRgb()])\n            }}/>\n\n            <FlatList\n                keyExtractor={(item) => item}\n                data={colors}\n                renderItem={({item}) => {\n                    return(\n                        <View style={{height: 100, width: 100, backgroundColor: item}} />\n                    );\n                }}\n                />\n        </View>\n    )\n}\n\nconst randomRgb = () => {\n    const red = Math.floor(Math.random() * 256);\n    const green = Math.floor(Math.random() * 256);\n    const blue = Math.floor(Math.random() * 256);\n\n    return `rgb(${red}, ${green}, ${blue})`\n}\n\nconst styles = StyleSheet.create({\n\n})\n\nexport default ColorScreen;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;EACtB,gBAA4BD,QAAQ,CAAC,EAAD,CAApC;EAAA;EAAA,IAAOE,MAAP;EAAA,IAAeC,SAAf;;EAEA,OACI,MAAC,IAAD;IAAA,WACI,KAAC,MAAD;MAAQ,KAAK,EAAC,aAAd;MAA4B,OAAO,EAAE,mBAAM;QACvCA,SAAS,8BAAKD,MAAL,IAAaE,SAAS,EAAtB,GAAT;MACH;IAFD,EADJ,EAKI,KAAC,QAAD;MACI,YAAY,EAAE,sBAACC,IAAD;QAAA,OAAUA,IAAV;MAAA,CADlB;MAEI,IAAI,EAAEH,MAFV;MAGI,UAAU,EAAE,0BAAY;QAAA,IAAVG,IAAU,QAAVA,IAAU;QACpB,OACI,KAAC,IAAD;UAAM,KAAK,EAAE;YAACC,MAAM,EAAE,GAAT;YAAcC,KAAK,EAAE,GAArB;YAA0BC,eAAe,EAAEH;UAA3C;QAAb,EADJ;MAGH;IAPL,EALJ;EAAA,EADJ;AAiBH,CApBD;;AAsBA,IAAMD,SAAS,GAAG,SAAZA,SAAY,GAAM;EACpB,IAAMK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;EACA,IAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;EACA,IAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;EAEA,gBAAcH,GAAd,UAAsBI,KAAtB,UAAgCC,IAAhC;AACH,CAND;;AAQA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAIA,eAAehB,WAAf"},"metadata":{},"sourceType":"module"}