{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ColorCounter from \"../components/ColorCounter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar COLOR_INCREMENT = 15;\n\nvar reducer = function reducer(state, action) {\n  switch (action.colorToChange) {\n    case 'red':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        red: state.red + action.amount\n      });\n\n    case 'green':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        green: state.green + action.amount\n      });\n\n    case 'blue':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        blue: state.blue + action.amount\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar SquareScreen = function SquareScreen() {\n  var _useReducer = useReducer(reducer, {\n    red: 0,\n    green: 0,\n    blue: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var red = state.red,\n      green = state.green,\n      blue = state.blue;\n  return _jsxs(View, {\n    children: [_jsx(ColorCounter, {\n      onIncrease: function onIncrease() {\n        return dispatch({\n          colorToChange: 'red',\n          amount: COLOR_INCREMENT\n        });\n      },\n      onDecrease: function onDecrease() {\n        return dispatch({\n          colorToChange: 'red',\n          amount: -1 * COLOR_INCREMENT\n        });\n      },\n      color: \"Red\"\n    }), _jsx(ColorCounter, {\n      onIncrease: function onIncrease() {\n        return dispatch({\n          colorToChange: 'green',\n          amount: COLOR_INCREMENT\n        });\n      },\n      onDecrease: function onDecrease() {\n        return dispatch({\n          colorToChange: 'green',\n          amount: -1 * COLOR_INCREMENT\n        });\n      },\n      color: \"Green\"\n    }), _jsx(ColorCounter, {\n      onIncrease: function onIncrease() {\n        return dispatch({\n          colorToChange: 'blue',\n          amount: COLOR_INCREMENT\n        });\n      },\n      onDecrease: function onDecrease() {\n        return dispatch({\n          colorToChange: 'blue',\n          amount: -1 * COLOR_INCREMENT\n        });\n      },\n      color: \"Blue\"\n    }), _jsx(View, {\n      style: {\n        height: 150,\n        width: 150,\n        backgroundColor: \"rgb(\" + red + \",\" + green + \",\" + blue + \")\"\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({});\nexport default SquareScreen;","map":{"version":3,"names":["React","useReducer","ColorCounter","COLOR_INCREMENT","reducer","state","action","colorToChange","red","amount","green","blue","SquareScreen","dispatch","height","width","backgroundColor","styles","StyleSheet","create"],"sources":["/Users/michaelkim/workspace_reactnative/ste_grider/rn-starter/src/screens/SquareScreen.js"],"sourcesContent":["import React, {useReducer} from 'react'\nimport {View, Text, Button, StyleSheet} from \"react-native\";\nimport ColorCounter from \"../components/ColorCounter\";\n\nconst COLOR_INCREMENT = 15;\n\nconst reducer = (state, action) => {\n\n    switch (action.colorToChange) {\n        case 'red':\n            return {...state, red: state.red + action.amount};\n        case 'green':\n            return {...state, green: state.green + action.amount};\n        case 'blue':\n            return {...state, blue: state.blue + action.amount};\n        default:\n            return state;\n    }\n};\n\nconst SquareScreen = () => {\n    const [state, dispatch] = useReducer(reducer, {red:0, green:0, blue:0});\n    const {red, green, blue} = state;\n\n    return (\n        <View>\n            <ColorCounter\n                onIncrease={() => dispatch({colorToChange: 'red', amount: COLOR_INCREMENT})}\n                onDecrease={() => dispatch({colorToChange: 'red', amount: -1 * COLOR_INCREMENT})}\n                color=\"Red\"\n            />\n            <ColorCounter\n                onIncrease={() => dispatch({colorToChange: 'green', amount: COLOR_INCREMENT})}\n                onDecrease={() => dispatch({colorToChange: 'green', amount: -1 * COLOR_INCREMENT})}\n                color=\"Green\"\n            />\n            <ColorCounter\n                onIncrease={() => dispatch({colorToChange: 'blue', amount: COLOR_INCREMENT})}\n                onDecrease={() => dispatch({colorToChange: 'blue', amount: -1 * COLOR_INCREMENT})}\n                color=\"Blue\"\n            />\n            <View\n                style={{\n                    height: 150,\n                    width: 150,\n                    backgroundColor: `rgb(${red},${green},${blue})`\n                }}\n            />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n\n})\n\nexport default SquareScreen;\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;;;;;AAEA,OAAOC,YAAP;;;AAEA,IAAMC,eAAe,GAAG,EAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;EAE/B,QAAQA,MAAM,CAACC,aAAf;IACI,KAAK,KAAL;MACI,uCAAWF,KAAX;QAAkBG,GAAG,EAAEH,KAAK,CAACG,GAAN,GAAYF,MAAM,CAACG;MAA1C;;IACJ,KAAK,OAAL;MACI,uCAAWJ,KAAX;QAAkBK,KAAK,EAAEL,KAAK,CAACK,KAAN,GAAcJ,MAAM,CAACG;MAA9C;;IACJ,KAAK,MAAL;MACI,uCAAWJ,KAAX;QAAkBM,IAAI,EAAEN,KAAK,CAACM,IAAN,GAAaL,MAAM,CAACG;MAA5C;;IACJ;MACI,OAAOJ,KAAP;EARR;AAUH,CAZD;;AAcA,IAAMO,YAAY,GAAG,SAAfA,YAAe,GAAM;EACvB,kBAA0BX,UAAU,CAACG,OAAD,EAAU;IAACI,GAAG,EAAC,CAAL;IAAQE,KAAK,EAAC,CAAd;IAAiBC,IAAI,EAAC;EAAtB,CAAV,CAApC;EAAA;EAAA,IAAON,KAAP;EAAA,IAAcQ,QAAd;;EACA,IAAOL,GAAP,GAA2BH,KAA3B,CAAOG,GAAP;EAAA,IAAYE,KAAZ,GAA2BL,KAA3B,CAAYK,KAAZ;EAAA,IAAmBC,IAAnB,GAA2BN,KAA3B,CAAmBM,IAAnB;EAEA,OACI,MAAC,IAAD;IAAA,WACI,KAAC,YAAD;MACI,UAAU,EAAE;QAAA,OAAME,QAAQ,CAAC;UAACN,aAAa,EAAE,KAAhB;UAAuBE,MAAM,EAAEN;QAA/B,CAAD,CAAd;MAAA,CADhB;MAEI,UAAU,EAAE;QAAA,OAAMU,QAAQ,CAAC;UAACN,aAAa,EAAE,KAAhB;UAAuBE,MAAM,EAAE,CAAC,CAAD,GAAKN;QAApC,CAAD,CAAd;MAAA,CAFhB;MAGI,KAAK,EAAC;IAHV,EADJ,EAMI,KAAC,YAAD;MACI,UAAU,EAAE;QAAA,OAAMU,QAAQ,CAAC;UAACN,aAAa,EAAE,OAAhB;UAAyBE,MAAM,EAAEN;QAAjC,CAAD,CAAd;MAAA,CADhB;MAEI,UAAU,EAAE;QAAA,OAAMU,QAAQ,CAAC;UAACN,aAAa,EAAE,OAAhB;UAAyBE,MAAM,EAAE,CAAC,CAAD,GAAKN;QAAtC,CAAD,CAAd;MAAA,CAFhB;MAGI,KAAK,EAAC;IAHV,EANJ,EAWI,KAAC,YAAD;MACI,UAAU,EAAE;QAAA,OAAMU,QAAQ,CAAC;UAACN,aAAa,EAAE,MAAhB;UAAwBE,MAAM,EAAEN;QAAhC,CAAD,CAAd;MAAA,CADhB;MAEI,UAAU,EAAE;QAAA,OAAMU,QAAQ,CAAC;UAACN,aAAa,EAAE,MAAhB;UAAwBE,MAAM,EAAE,CAAC,CAAD,GAAKN;QAArC,CAAD,CAAd;MAAA,CAFhB;MAGI,KAAK,EAAC;IAHV,EAXJ,EAgBI,KAAC,IAAD;MACI,KAAK,EAAE;QACHW,MAAM,EAAE,GADL;QAEHC,KAAK,EAAE,GAFJ;QAGHC,eAAe,WAASR,GAAT,SAAgBE,KAAhB,SAAyBC,IAAzB;MAHZ;IADX,EAhBJ;EAAA,EADJ;AA0BH,CA9BD;;AAgCA,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAIA,eAAeP,YAAf"},"metadata":{},"sourceType":"module"}